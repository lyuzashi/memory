DavLockDB /var/www/DavLock
RemoteIPHeader X-Real-IP
RemoteIPTrustedProxy 192.168.1.1
RemoteIPInternalProxy 192.168.1.1
LogFormat "%{X-Forwarded-For}i %l %u %t \"%r\" %>s %b \"%{Referer}i\" \"%{User-Agent}i\"" combined
RewriteEngine On
AddExternalAuth pwauth /usr/sbin/pwauth
SetExternalAuthMethod pwauth pipe

<VirtualHost *:80>

  DocumentRoot /var/www/webdav
  Alias /keeweb /var/www/html/keeweb
  Alias /.well-known /var/www/html/.well-known

  ErrorLog ${APACHE_LOG_DIR}/error.log
  CustomLog ${APACHE_LOG_DIR}/access.log combined

  <Directory "/">
    Dav On
    DirectoryIndex disabled
    order deny,allow
    deny from all
    allow from 192.168.1.1/24
    DirectorySlash Off
    Header always set Access-Control-Allow-Origin "*"
    Header always set Access-Control-Allow-Headers "origin, content-type, cache-control, accept, authorization, if-match, destination, overwrite, depth"
    Header always set Access-Control-Expose-Headers "ETag"
    Header always set Access-Control-Allow-Methods "GET, HEAD, POST, PUT, OPTIONS, MOVE, DELETE, COPY, LOCK, UNLOCK, PROPFIND"
    Header always set Access-Control-Allow-Credentials "true"
    RewriteCond expr "%{ENV:HTTPS} !~ /on/i"
    RewriteRule ^ https://%{HTTP_HOST}%{REQUEST_URI} [L,R=301]
  </Directory>

  <FilesMatch "\.kdbx(\.[0-9]+)?$">
    Satisfy any
    AuthBasicProvider external
    AuthExternal pwauth
    AuthName "KeeWeb database file"
    AuthType Basic
    require valid-user
    order deny,allow
    deny from all
    allow from 192.168.1.1/24
  </FilesMatch>

  <Location "/keeweb">
    Dav Off
    DirectoryIndex index.html
    DirectorySlash On
    allow from all
  </Location>

  <Location "/.well-known">
    Dav Off
    allow from all
    RewriteEngine On
  </Location>

  <LocationMatch "/(locations?)$">
    allow from all
    <If "-R '192.168.1.0/24'">
       RequestHeader set x-memory-private true
    </If>
    <Else>
      RequestHeader set x-memory-private false
    </Else>
    ProxyPass        unix:/run/location.sock|http://%{HTTP_HOST}
    ProxyPassReverse unix:/run/location.sock|http://%{HTTP_HOST}
  </LocationMatch>

  # Git server for updating components
  SetEnv GIT_PROJECT_ROOT /var/www/git
  SetEnv GIT_HTTP_EXPORT_ALL
  ScriptAlias /git/ /usr/lib/git-core/git-http-backend/

  <Files "git-http-backend">
    AuthType Basic
    AuthName "Git Access"
    AuthBasicProvider external
    AuthExternal pwauth
    Require expr !(%{QUERY_STRING} -strmatch '*service=git-receive-pack*' || %{REQUEST_URI} =~ m#/git-receive-pack$#)
    Require valid-user
    Require all granted
  </Files>

</VirtualHost>

# vim: syntax=apache ts=4 sw=4 sts=4 sr noet

#cloud-config

runcmd:
  - sed -i 's/obscure//g' /etc/pam.d/common-password
  - /var/setup

write_files:
- path: /var/setup
  permissions: '0744'
  content: |
    #!/bin/bash

    # Setup any VLANs on boot
    ip link add link eth0 name eth0.6 type vlan id 6

    # Set hostname
    echo "Memory" | tee /etc/hostname > /dev/null

    # Find best apt mirror
    # export DEBIAN_FRONTEND=noninteractive
    # sudo apt-get install netselect-apt -y
    # sudo netselect-apt

    # Add certbot repo
    apt update
    apt-get install software-properties-common -y
    # add-apt-repository ppa:certbot/certbot

    # Update sources and packages
    apt update
    apt full-upgrade -y

    # Install required software
    # Using -y flag accepts to install packages and uses default option to keep existing files
    apt install vlan libapache2-mpm-itk apache2-utils apache2 certbot git python-certbot-apache lsyncd apache2-bin -y

    # Ensure VLAN module is installed
    echo '8021q' | tee -a /etc/modules > /dev/null
    modprobe 8021q

    # Setup Apache
    a2enmod dav dav_fs headers remoteip rewrite proxy proxy_http cgi alias env mpm_prefork authz_host access_compat dir authn_file authz_user

    a2ensite 000-default.conf
    systemctl restart apache2

    mkdir -p /var/www/webdav
    chown www-data:www-data /var/www/webdav
    touch /var/www/passwd


    # Download KeeWeb
    KEEWEB=/var/www/html/keeweb
    mkdir -p $KEEWEB
    git init $KEEWEB
    cd $KEEWEB
    git remote add origin https://github.com/keeweb/keeweb.git
    source /scripts/update-keeweb.sh
    chown :www-data -R $KEEWEB

    # Mount backup media
    mkdir -p /media/backup
    chown www-data /media/backup
    chmod 777 /media/backup
    echo "/dev/sda1 /media/backup vfat rw,uid=www-data,gid=www-data,umask=002,dmask=002 0 0" | tee -a /etc/fstab > /dev/null
    mount -a
    sudo cp -r /media/backup/* /var/www/webdav/
    lsyncd -rsync /var/www/webdav /media/backup
    chown -R www-data:www-data /var/www
    systemctl enable lsyncd-backup.service
    systemctl start lsyncd-backup.service


    # # Setup SSL certificate
    if [ -f /media/backup/letsencrypt_backup.tar.gz ] ; then
      tar zxvf /media/backup/letsencrypt_backup.tar.gz -C /
    fi
    certbot --apache -d memory.grid.robotjamie.com -n --agree-tos -q --email ben@robotjamie.com #--staging
    # To update to production certificate, run
    # certbot --apache -d memory.grid.robotjamie.com -n --agree-tos -q --email ben@robotjamie.com --force-renew

    # Install node
    # Install node (finding latest version for major in .nvmrc, using correct arch version)
    SOURCE="https://nodejs.org/dist/latest"
    MAJOR="10"
    ARM="$(sed -n 's/model name.*(\(\S*\)).*$/\1/p' /proc/cpuinfo | head -1)"
    NODE="$(curl -sL $SOURCE-v$MAJOR.x | grep arm$ARM.tar.xz | cut -d'"' -f2)"
    wget -O node.tar.xz $SOURCE-v$MAJOR.x/$NODE
    tar -xf node.tar.xz
    chmod -R 755 node*/bin/*
    cp -r node*/{bin,lib,share} /usr/local
    rm -r node*
    # Allow binding to port 80
    setcap 'cap_net_bind_service=+ep' $(which node)

    echo 'www-data ALL=NOPASSWD: /bin/systemctl restart location' | tee -a /etc/sudoers

    # npm install -g pm2
    # mkdir /var/www/.pm2
    # chown www-data:www-data /var/www/.pm2
    # chmod +s /var/www/.pm2

    cd /var/www/location
    mv git .git
    git init . # Reinitialise 
    chown -R :www-data .
    chmod -R g+w .

    cd /var/www/git/location
    git init . --bare # Reinitialise 
    git fetch -q https://github.com/lyuzashi/location.git master:master
    # Update permissions after init creates new files
    chown -R :www-data .
    chmod -R g+w .
    sudo -u www-data hooks/post-update
    cd /var/www/location
    sudo -u www-data .git/hooks/post-merge

    # systemctl enable mongodb
    systemctl enable location
    systemctl start location
    systemctl enable apache2
    systemctl restart apache2

    reboot

    exit 0
